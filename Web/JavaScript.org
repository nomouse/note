* 概述
* 基本语法
** 全局语法
*** var和不带var的区别
    不带var的话,是全局变量,带var的话是局部变量
*** 变量提升问题
    JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。
    这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升（hoisting）。

    代码:
    console.log(a);
    var a = 1;
    执行时会变为:
    var a;
    console.log(a);
    a = 1;
** 数据类型
* 标准库
** JSON
*** 序列化
* 面向对象
* DOM
* 浏览器环境
* 跨域问题
** 产生原因
   浏览器基于安全的考虑，对JS AJAX请求跨域调用其他页面的对象做了限制
** 限制
|-------------------------+--------------------+----------|
| url                     | 说明               | 是否可行 |
|-------------------------+--------------------+----------|
| http://a.com/a.js       | 同一域名           | 可       |
| http://a.com/b.js       |                    |          |
|-------------------------+--------------------+----------|
| http://a.com/a.js       | 同一域名，不同端口 | 否       |
| http://a.com:8080/a.js  |                    |          |
|-------------------------+--------------------+----------|
| http://a.com/a.js       | 同一域名，不同协议 | 否       |
| https://a.com/a.js      |                    |          |
|-------------------------+--------------------+----------|
| http://a.com/a.js       | 域名和域名对应ip   | 否       |
| http://70.32.92.74/b.js |                    |          |
|-------------------------+--------------------+----------|
| http://www.a.com/a.js   | 主域相同，子域不同 | 否       |
| http://img.a.com/a.js   |                    |          |
|-------------------------+--------------------+----------|
| http://a.com/a.js       | 不同域名           | 否       |
| http://b.com/a.js       |                    |          |
|-------------------------+--------------------+----------|
** 解决方法JsonP
** 解决方法CROS
Access-Control-Allow-Origin:*         允许的域
Access-Control-Allow-Credentials:true 是否允许发送cookie
