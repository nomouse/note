* Git的特点
  Git是一个分布式版本控制系统，而CVS，SVN为集中式版本控制系统
  Git相比其他系统的优点
  1、在无网络的情况下也可以正常提交、回滚
  2、分支功能更强大
* 客户端安装配置
** 下载地址
   [[http://git-scm.com/download]]
** 配置
   git config --global -l 查看当前所有全局配置
   git config --global gui.encoding utf-8 设置git gui的编码为utf-8
   git config --global i18n.commitencoding utf-8 设置git提交文件格式为utf-8
   git config --global i18n.logoutputencoding utf-8 设置git输入日志格式为utf-8
* 基础
** init
   git init 初始化本地git仓库
   建立远程仓库
** remote
   git remote -v
** clone
   git clone git@192.168.100.37:code   将远程仓库迁入当前文件夹
** add
   git add  添加文件或文件夹当前分支
** commit
   git commit -m "123" 提交修改
** push
   git push -u origin test 将本地新分支推到远程
   git push
** branch
   git branch -va 查看当前分支
** checkout
   git checkout test 切换为本地分支test
   git checkout -b [分支名] 当前远程分支为基础创建本地新分支
** merge
   git merge --ff-none 合并分支
* 应用
** 本地初始化一个仓库到远程
mkdir webxdemo
cd webxdemo
git init
touch README.md
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:nomouse/webxdemo.git
git push -u origin master
** 仓库操作
   git init 新建本地仓库
   git clone git@github.com:nomouse/nomouse-java.git 签出远程仓库到本地
   git remote -v 查看远程仓库
   git remote rename nomouse nomouse1 重命名
   git remote rm nomouse 删除远程仓库
** 分支操作
   git status 获取当前git分支
   git branch 获取本地分支
   git branch -va 获取所有分支
   git checkout master 签到master分支，如果本地没有就从远程拉下来
   git branch -d 删除本地分支
   git push origin --delete beta 删除远程origin仓库中的beta分支
** 更新
   git fetch  从远程分支获取最新的版本到本地，不会自动merge
   git pull   从远程分支获取最新的版本到本地，并且自动merge，方便但是不推荐
   git fetch orgin master:tmp     从远程分支获取最新的版本到本地的tmp分支
   git diff tmp    比较当前本地分支和本地tmp分支的差别
   git merge tmp   合并当前本地分支和本地tmp分支
** 提交
   git rm test.txt 删除text.txt文件
   git add test.txt 添加test.txt文件
   git commit -m "update test.txt" 提交
   git commit -a -m "sdf" 省略git add
   git diff 查看差别
   git push 推到远程
   git push origin HEAD:feature/20151228_brach_492577  推送到远程的某个分支
** 回滚
   git log 查看git提交日志
   git checkout test.txt 回滚test.txt文件
   git reset --hard 12sdfafsf 回滚提交的版本
** 版本标签
   git tag 查看标签
   git tag -a v1.4.2 -m "说明" 创建本地版本标签
   git push origin v1.4.2 推送本地分支到远程
   git tag -d v1.0 删除本地标签
   git push origin --delete tag v1.1 删除远程origin仓库中的v1.0标签
   git checkout v1.0 签出标签v1.0到本地

* 服务器搭建
** gitolite服务端
*** 服务器需求
    any unix system
    sh
    git 1.6.6 or later
    perl 5.8.8 or later
    openssh 5.0 or later
*** 服务器建立git用户
    rm -rf ~/.ssh
    adduser --system git --shell "/bin/bash"
*** 管理端生成ssh钥匙对
    ssh-keygen -t rsa
    scp ~/.ssh/id_rsa.pub git@host admin.pub
*** 服务器端安装gitolite
    git clone git://github.com/sitaramc/gitolite
    mkdir -p $HOME/bin
    gitolite/install -to $HOME/bin
    $HOME/bin/gitolite setup -pk admin.pub
*** 管理端迁出管理项目
    git clone git@host:gitolite-admin
    vi gitolite-admin/conf/gitolite.conf

    repo foo
    RW+         =   alice
    RW          =   bob
    R           =   carol

    git add conf
    git add keydir
    git commit -m "added foo, gave access to alice, bob, carol"
    git push
