** 风险识别和控制
*** 什么是项目风险？
    项目风险是指可能会影响项目目标达成的**不确定因素**。
*** 日常项目中常见的风险有哪些？怎么识别和控制？
    对于我们日常的项目，因为都比较小风险只要能识别出来控制相对简单，所有下面讲讲常见的一些风险识别。
*** 技术风险，由于前期未对技术方案的可以性做充分研究，导致项目实际过程中时间和进度不可控。 解决方案：项目计划开始前先做详细的技术调研，甚至预演，方案设计和评审时邀请架构师参与。
    人员风险，项目成员由于能力的差别，时间评估可能准也可能不准，项目成员日常可能会因为线上问题处理、休假、会议等事情中途被打扰，导致任务延期。 解决方案：计划的时候根据具体情况预留buf时间，及时沟通，提前发现调整计划，提升成员能力。
    外部依赖风险，项目中如果依赖外部系统或外部资源，可能会因为外部的不可控导致风险。 解决方案：1.把外部系统和资源相关人员拉入项目组，定期沟通，确认进度。2.项目开始前把对接方案提前确定好，最好能形成文档或接口规范 3.技术上解耦，使两边的项目开发过程没有依赖，可以通过接口文档和mock等方式。
    环境风险，很多项目线下过程都好好的，到发布阶段出现各种问题，如线上数据问题，线上环境问题。解决方案：在不影响老功能的情况下，提前预发和发布，预留足够多的时间线上验证，比如在项目找期接段，可以把新功能入口关闭，先发到线上，用线上数据验证。对于先应用，完全可以在没有任何功能的情况下，先把发布流程走通。
    总结：在项目开始之前尽量多考虑各种可能的风险，做好提前预防。在项目过程中发现的风险，及时沟通，一旦发现立马应对。
*** 需求变更频繁
    基本上每一个项目都会碰到，没法避免，只能应对。下面是一些常用的方法：
    需求开始做之前先问下业务方或产品经理为什么要做，做完能带来的价值是什么。 倒逼业务方或产品经理把自己的需求想清楚，因为很多时候他们自己还没想清楚的时候就让你去做。
    我们要的是需求背后的原始需求，而不是解决方案。业务方或产品经理经常会告诉你要怎么怎么做，而不是客户需要什么。
    做灵活的设计，预留扩展，让可能的变更更容易，更简单。
    短迭代，快速上线，建立一种需求变更机制。
    业务前瞻性，提高项目成员的业务能力。
    总结：尽量减少，快速应对。
*** 项目时间倒排问题
    这又是一个没法避免的问题，可能是因为政治原因（比如大老板说了）、也可能是市场原因（比如大促），项目必须在某个时间点发布。这个时候就必须要按时间倒排。具体做法：
    确定项目各个重要里程碑，从后往前确定里程碑的时间点。比如：发布时间点->预发布完成时间点->showcase时间点->测试完成时间点->开发完成时间点-> 交互稿/DEMO -> ...
    一旦倒排无法排出计划的时候，需要的措施无非是：申请加人、减功能。
    倒排的计划一定要注意，先紧后松，项目开始阶段尽量把进度提前，保证后面有充足的时间应对风险。
    总结：倒排计划，先紧后松。
*** 资源评估不准
    任务拆分足够细，一个任务一般不要超过3天。
    任务安排的时候，注意任务之间的依赖关系
    短迭代，快速上线的方式。
    总结：细化、细化、再细化。
