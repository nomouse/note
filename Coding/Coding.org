* 面向对象
定义：面向对象，以对象为核心整合数据及对数据操作方法，是一种软件开发方法和编程范式。
特性：抽象、封装、继承、多态
演进：第一次软件危机产生面向过程；第二次软件危机产生面向对象；

* UML(Unified Modeling Language)语言
UML统一建模语言，UML是一种定义良好、易于表达、功能强大且普遍适用的建模语言。

** 关系
		[用例图]     ->提炼      [领域图]
		-----------------------------
		  ｜实化                  ｜细化
		[序列图]                 [类图]
			  \                /
				    [状态图]
** 用例图
** 序列图
** 状态图
** 类图

* 设计原则
SOLID：

** 开闭OCP(Open Close Principle)
软件开发应当面向扩展开放，面向修改关闭
典型case：发权益，在父类中通过ifelse判断类型决定发哪一种具体类型的权益
解法：
1 策略模式
  不同权益类型实现同一个send接口，通过模型中的不同权益类型，来实现不同发放。
2 适配器模式

3 观察者模式
  发完权益，需要后续发消息通知，所以在发完后调用一个onSendSuccess接口，需要发放的时候进行订阅
4 模版模式

** 单一指责SRP(Single Responsibility Principle)
** 里氏替换LSP(Liskov Substitution Principle)
任何实用父类的地方，都应该可以被基类替换而无问题。
典型case：

** 接口隔离ISP(Interface Segregation Principle)
** 依赖倒置DIP(Dependence Inversion Principle)



* 设计模式


