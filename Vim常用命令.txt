一、光标移动
h  		 	光标向左移动一个字符
j  		 	光标向下移动一个字符
k  		 	光标向上移动一个字符
l        	光标向右移动一个字符
Ctrl+f   	屏幕向前翻一页
Ctrl+b   	屏幕向后翻一页
Ctrl+d   	屏幕向前翻半页
Ctrl+u   	屏幕向前翻半页
+  		 	光标移动到非空格符的下一列
-		 	光标移动到非空格符的上一列
[N]<space> 	按下数字后再按空格键，光标会向右移动这一行的n个字符。例如20<space>,则光标会向右移动20个字符
0(HOME)  	移动到这一行的第一个字符处
$(END)   	移动到这一行的最后一个字符处
H        	光标移动到这个屏幕最上方的那一行
M        	光标移动到这个屏幕中央的那一行
L        	光标移动到这个屏幕最下方的那一行
G        	光标移动到文件的最后一行?
[N]G       	移动到这个文件的第n行。例如20G，则会移动到这个文件的第20行（可配合:set?nu）
[N]<Enter> 	光标向下移动n行

二、删除、复制、粘帖
x       向后删除一个字符 
X       向前删除一个字符
[N]x 	向后删除n个字符
Dd      删除光标所在的那一整行
[N]dd   删除光标所在列的向下n列，例如，20dd则事删除20列
dG      删除光标所在列到最后一行的所有数据 
d1G     删除光标所在行到第一行的所有数据
yy?		复制光标所在行
[N]yy?	复制光标所在列的向下n列，例如，20yy则是复制20列
y1G?	复制光标所在列到第一列的所有数据?yG?复制光标所在列到最后一列的所有数据?
p?		复制的数据粘贴在光标下一列
P		粘贴在光标上一列
J?		将光标所在列与下一列的数据结合成一列?
U?		恢复前一个动作（undo）

vim有12个粘贴板，分别是0、1、2、...、9、a、“、＋；用:reg命令可以查看各个粘贴板里的内容。在vim中简单用y只是复制到“（双引号)粘贴板里，同样用p粘贴的也是这个粘贴板里的内容；
要将vim的内容复制到某个粘贴板，需要退出编辑模式，进入正常模式后，选择要复制的内容，然后按"Ny（注意带引号）完成复制，其中N为粘贴板号(注意是按一下双引号然后按粘贴板号最后按y)，例如要把内容复制到粘贴板a，选中内容后按"ay就可以了，有两点需要说明一下：
“号粘贴板（临时粘贴板）比较特殊，直接按y就复制到这个粘贴板中了，直接按p就粘贴这个粘贴板中的内容；
+号粘贴板是系统粘贴板，用"+y将内容复制到该粘贴板后可以使用Ctrl＋V将其粘贴到其他文档（如firefox、gedit）中，同理，要把在其他地方用Ctrl＋C或右键复制的内容复制到vim中，需要在正常模式下按"+p；
要将vim某个粘贴板里的内容粘贴进来，需要退出编辑模式，在正常模式按"Np，其中N为粘贴板号，如上所述，可以按"5p将5号粘贴板里的内容粘贴进来，也可以按"+p将系统全局粘贴板里的内容粘贴进来。



三、查找替换

/word	               在光标之后查找一个名为word的字符串（常用） 
word                   在光标之前查找一个名为word的字符串  
:n1,n2s/word1/word2/g  在第n1与n2行之间查找word1这个字符串，并将该字符串替换为word2（常用）  
:1,$s/ word1/word2/g   在第一行与最后一行之间查找word1这个字符串，并将该字符串替换为word2（常用）  
:1,$s/ word1/word2/gc  在第一行与最后一行之间查找word1这个字符串，并将该字符串替换为word2，且在替换前显示提示符让用户确认(conform)（常用） 
:%s/word1/word2/g      全局替换word1为word2,且不区分大小写


四、编辑模式
i,I?			插入：在当前光标所在处插入输入的文字，已存在?
a,A?			添加：由当前光标所在处的下一个字符开始输入，已存在的字符会向后退（常用）?
o,O?			插入新的一行：从光标所在行的下一行行首开始输入字符（常用）?
r,R?			替换：r会替换光标所指的那一个字符；R会一直替换光标所指的文字，直到按下Esc为止（常用）

Esc?			退出编辑模式，回到一般模式（常用）?命令行模式?:w?将编辑的数据写入硬盘文件中（常用）?
:w!?			若文件属性为只读，强制写入该文件?:q?退出vi，快捷方式为SHIFT+ZZ?
:q!?			若曾修改过文件，又不想保存，使用！为强制退出不保存文件，快捷方式为SHIFT+ZQ?
:wq?			保存后退出，若为:wq!，则为强制保存后退出（常用）?
:w[filename]?	将编辑数据保存为另一个文件（类似另存新文档）?
:r[filename]?	在编辑的数据中，读入另一个文件的数据。即将filename这个文件内容加到光标所在行的后面?
:set?nu?		显示行号，设定之后，会在每一行的前面显示该行的行号?
:set?nonu?		与ser?nu相反，为取消行号
